#+HUGO_BASE_DIR: ./

#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t

* Me
   :PROPERTIES:
   :EXPORT_HUGO_SECTION: ./
   :EXPORT_FILE_NAME: _index
   :EXPORT_HUGO_MENU: :menu main :weight -1000
   :END:
** About me
   Jackie Zhang / 张 凯 / i@jiaoshou.me
*** Interest
   Deep Learning
*** Hobby
   Movie
*** Links
   [[https://github.com/iceiceiceJack/][Github]]

** Major Projects
   

* Blog
   :PROPERTIES:
   :EXPORT_HUGO_SECTION: Blog
   :END:

** Misc                                                               :@misc:
   :PROPERTIES:
   :EXPORT_HUGO_SECTION*: misc
   :END:
*** DONE Ubuntu开箱                                            :ubuntu:setup:
    :PROPERTIES:
    :EXPORT_HUGO_BUNDLE: ubuntu开箱
    :EXPORT_DATE: [2019-01-18 Thu 22:17]
    :EXPORT_FILE_NAME: index
    :END:
    记录下新装 Ubuntu 18.04 的环境配置。
    #+HUGO: more
**** sudo 免密码
     #+BEGIN_SRC sh
       sudo su -
       visudo
     #+END_SRC
     找到 root ALL=(ALL) ALL, 在其下面追加如下配置，即执行所有超级用户命令密码。
     #+BEGIN_SRC sh
       your_user_name ALL=(ALL) NOPASSWD: ALL
     #+END_SRC
     有的时候你的将用户设了 nopasswd，但是不起作用，原因是被后面的 group 的设置覆盖了，需要把 group 的设置也改为 nopasswd。
     #+BEGIN_SRC sh
       %admin ALL=(ALL) NOPASSWD: ALL
     #+END_SRC
**** 更新
     #+BEGIN_SRC sh
       sudo apt update && sudo apt upgrade -y
     #+END_SRC
**** 开启ssh远程登录
     #+BEGIN_SRC sh
       sudo apt install -y openssh-server
     #+END_SRC
**** 安装基本工具
     #+BEGIN_SRC sh
       sudo apt install -y vim tmux supervisor build-essential pkg-config
     #+END_SRC
**** bash设置优化
     #+BEGIN_SRC sh
       echo 'set match-hidden-files off' >> ~/.inputrc
       echo 'set show-all-if-ambiguous on' >> ~/.inputrc
       echo 'set completion-ignore-case on' >> ~/.inputrc
       echo '"\e[A": history-search-backward' >> ~/.inputrc
       echo '"\e[B": history-search-forward' >> ~/.inputrc
     #+END_SRC
**** cuda
     1.禁用nouveau
      - 如果下面的指令有输出，表示nouveau驱动被加载，需手动禁用
     #+BEGIN_SRC sh
       lsmod | grep nouveau
     #+END_SRC
      - 执行
     #+BEGIN_SRC sh
       echo 'blacklist nouveau' | sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
       echo 'options nouveau modeset=0' | sudo tee -a /etc/modprobe.d/blacklist-nouveau.conf
       sudo update-initramfs -u
     #+END_SRC
     2.重启,不要进入图形界面
     #+BEGIN_SRC sh
       sudo reboot
     #+END_SRC
     3.运行官网下载的runfile
**** cudnn
     下载对应cuda版本的cudnn，并解压
     #+BEGIN_SRC sh
       sudo cp -P include/cudnn.h /usr/local/cuda/include
       sudo cp -P lib64/libcudnn* /usr/local/cuda/lib64
       sudo chmod a+r /usr/local/cuda/lib64/libcudnn*
     #+END_SRC
*** DONE SS+BBR 十分钟科学上网                                  :shadowsocks:
    :PROPERTIES:
    :EXPORT_HUGO_BUNDLE: ss-bbr-十分钟科学上网
    :EXPORT_DATE: [2018-05-26 Fri 18:19]
    :EXPORT_FILE_NAME: index
    :END:
    听闻不少小伙伴还在购买他人提供的VPN，这里分享下自己搭建梯子的方法。
    #+HUGO: more
    -----
    =2019-03-01 更新：=
    - 最近GCP新加了香港机房，实测延迟较台湾略低。
    - 鉴于非常时期的一些非常手段，建议加密方式选用 rc4-md5，端口往大了填。
    -----
    以自己使用的GCP为例（300刀一年免费），也可以选用别家VPS。
**** 一、配置VM
***** 1.创建VM
     进入[[https://cloud.google.com/][GCP官网]]注册，此处需要一张VISA信用卡。
     进入控制台后，在左侧菜单 -> Compute Engine -> VM实例，点击创建。地区选择台湾，系统选择 Debian 9 或 Ubuntu 18.04，其余配置按余额自由发挥，勾上允许HTTP和HTTPS流量，添加SSH密钥，创建。
***** 2.配置静态IP
     左侧菜单 -> VPC网络 -> 外部IP地址，将IP类型调整为静态。
***** 3.配置防火墙规则
     创建防火墙规则，开放指定入站端口供shadowsocks使用，比如45678。
**** 二、装梯子
***** 1.远程连接
     在VM实例中，点击对应SSH，就可在浏览器中打开远程终端。
     也可以在本地终端中，利用添加的SSH密钥远程登录，并更新系统。
     #+BEGIN_SRC sh
       ssh your-google-account@your-VM-IP

       sudo su -
       apt update
       apt upgrade
     #+END_SRC
     注：更新过程中若出现google-cloud-SDK更新失败的错误，不要在意，是因为选择的VM配置太低造成的
***** 2.开启BBR
     开启BBR拥塞控制算法，需要内核版本4.9以上，Debian 9 默认4.9，Ubuntu 18.04 默认4.15。
     #+BEGIN_SRC sh
       modprobe tcp_bbr
       echo "tcp_bbr" >> /etc/modules-load.d/modules.conf
       echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
       echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
       sysctl -p
     #+END_SRC
     重启后执行lsmod ，看到有tcp_bbr模块即说明 bbr 已启动。
***** 3.安装配置shadowsocks
     #+BEGIN_SRC sh
       apt install shadowsocks
     #+END_SRC
     查看ssserver参数。
     #+BEGIN_SRC sh
       ssserver -h
     #+END_SRC
     以守护进程形式运行。
     #+BEGIN_SRC sh
       ssserver -k your-password -p your-server-port -d start
     #+END_SRC
     最简单的只需配置密码和端口，端口为防火墙打开的端口，不输入默认8388要在防火墙中打开。
     也可使用config.json文件配置启动参数。

**** 三、架飞机
     使用各系统版本的shadowsocks客户端或命令行，配置相应服务器设置，就可以起飞啦！
     [[https://github.com/shadowsocks/shadowsocks-windows/releases][Windows]]
     [[https://github.com/shadowsocks/shadowsocks-android/releases][Android]]
     [[https://github.com/shadowsocks/ShadowsocksX-NG/releases][MacOS]]
     [[https://github.com/shadowsocks/shadowsocks-qt5/releases][Linux]]


** Python                                                           :@python:
   :PROPERTIES:
   :EXPORT_HUGO_SECTION*: python
   :END:
